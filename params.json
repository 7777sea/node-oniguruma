{"name":"node-oniguruma","tagline":"Native Oniguruma Node Module","body":"# Oniguruma Node module [![Build Status](https://travis-ci.org/atom/node-oniguruma.png)](https://travis-ci.org/atom/node-oniguruma)\r\n\r\nNative Node bindings to the Oniguruma regular expressions library.\r\n\r\nRead all about Oniguruma regular expressions [here](http://www.geocities.jp/kosako3/oniguruma/doc/RE.txt).\r\n\r\n## Installing\r\n\r\n```sh\r\nnpm install oniguruma\r\n```\r\n\r\n## Building\r\n  * Clone the repository\r\n  * Run `npm install`\r\n  * Run `grunt` to compile the CoffeeScript and native code\r\n\r\n## Using\r\n\r\n```coffeescript\r\n{OnigRegExp, OnigScanner} = require 'oniguruma'\r\n```\r\n\r\n### OnigScanner(patterns)\r\n\r\nCreate a new scanner with the given patterns.\r\n\r\n`patterns` - An array of string patterns.\r\n\r\n### OnigScanner.findNextMatch(string, startPosition)\r\n\r\nFind the next match from a given position.\r\n\r\n`string` - The string to search.\r\n`startPosition` - The position to start at, defaults to `0`.\r\n\r\nReturns an object containing details about the match or `null` if no match.\r\n\r\n#### Example\r\n\r\n```coffeescript\r\nscanner = new OnigScanner(['c', 'a(b)?'])\r\nmatch = scanner.findNextMatch('abc')\r\nconsole.log match\r\n{\r\n  index: 1,  # Index of the best pattern match\r\n  captureIndices: [\r\n    {index: 0, start: 0, end: 2, length: 2},  # Entire match\r\n    {index: 1, start: 1, end: 2, length: 1}   # Match of first capture group\r\n  ]\r\n}\r\n```\r\n\r\n### OnigRegExp(pattern)\r\n\r\nCreate a new regex with the given pattern.\r\n\r\n`pattern` - A string pattern.\r\n\r\n### OnigRegExp.search(string, startPosition)\r\n\r\nSearch the string for a match starting at the given position.\r\n\r\n`string` - The string to search.\r\n`startPosition` - The position to start the search at, defaults to `0`.\r\n\r\nReturns an array of objects for each matched group or `null` if no match was\r\nfound.\r\n\r\n### Example\r\n```coffeescript\r\nregex = new OnigRegExp('a([b-d])c')\r\nmatch = regex.search('!abcdef')\r\nconsole.log match\r\n[\r\n  {index: 0, start: 1, end: 4, match: 'abc', length: 3}, # Entire match\r\n  {index: 1, start: 2, end: 3, match: 'b', length: 1}    # Match of first capture group\r\n]\r\n```\r\n\r\n## OnigRegExp.test(string)\r\n\r\nTest if this regular expression matches the given string.\r\n\r\n`string` - The string to test against.\r\n\r\nReturns `true` if at least one match, `false` otherwise.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}